package frontend.janelas;

import backend.Aplicacao;
import backend.entidades.Enfermeiro;
import backend.entidades.Medico;
import backend.entidades.ProfissionalSaude;
import backend.interfaces.ICallerJanelaCriarInterface;
import backend.managers.ManagerProfissionalSaude;
import javax.swing.JOptionPane;

public class JanelaCriarProfissionalSaude extends javax.swing.JDialog {
    private ICallerJanelaCriarInterface janela;
    private Aplicacao app;

    private String operacao;
    private String nomeProfissionalSaude;
    private ManagerProfissionalSaude managerProfissionalSaude;
    private ProfissionalSaude profissionalSaude;
    private boolean isMedico;
    
    /**
     * Creates new form NewJDialog
     */
    public JanelaCriarProfissionalSaude(ICallerJanelaCriarInterface janela, Aplicacao app,String codigoHospital, String codigoEnfermaria, String codigoProfissionalSaude, boolean isMedico) throws Aplicacao.HospitalNaoExistenteException, Aplicacao.EnfermariaNaoExistenteException {
        this.janela = janela;
        this.app = app;
        this.isMedico = isMedico;
        
        initComponents();

        //Indica que a janela deve ser modal ou seja,
        //bloqueia a execução do programa até que a janela seja fechada
        this.setModal(true);     
        
        this.setAlwaysOnTop(true);
        
        //Não permite o redimensionamento da janela
        this.setResizable(false);
        
        //Mostra a centralização da janela
        this.setLocationRelativeTo(null);
        
        //O processo de fecho da janela será controlado pelo programa
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);   
        
        managerProfissionalSaude = app.getManagerProfissionalSaude(codigoHospital, codigoEnfermaria);
        
        if(codigoProfissionalSaude == null) {
            operacao = ManagerProfissionalSaude.OPERACAO_ADICIONAR;
            
            if(isMedico) {
                setTitle("Adicionar Médico");
                profissionalSaude= new Medico();
            } else {
                profissionalSaude= new Enfermeiro();
                setTitle("Adicionar Enfermeiro");
            }
            labelEspecialidade.setVisible(isMedico);
            campoEspecialidadeProfissionalSaude.setVisible(isMedico);
        } else {
            operacao = ManagerProfissionalSaude.OPERACAO_EDITAR;
            setTitle("Editar Profissional de Saúde");
            
            try {
                profissionalSaude = app.getProfissionalSaude(codigoHospital, codigoEnfermaria, codigoProfissionalSaude);                
            } catch (Aplicacao.EnfermariaNaoExistenteException | Aplicacao.HospitalNaoExistenteException | Aplicacao.ProfissionalSaudeNaoExistenteException e) {
                mostrarAviso(e.getMessage());
                return;
            } 
            
            campoNomeProfissionalSaude.setText(profissionalSaude.getNome());
            campoEspecialidadeProfissionalSaude.setVisible(isMedico);
            labelEspecialidade.setVisible(isMedico);
            if(isMedico) {
                campoEspecialidadeProfissionalSaude.setText(((Medico)profissionalSaude).getEspecialidade());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filtros = new javax.swing.JPanel();
        tipoEnfermariaPane = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        campoNomeProfissionalSaude = new javax.swing.JTextField();
        labelEspecialidade = new javax.swing.JLabel();
        campoEspecialidadeProfissionalSaude = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout tipoEnfermariaPaneLayout = new javax.swing.GroupLayout(tipoEnfermariaPane);
        tipoEnfermariaPane.setLayout(tipoEnfermariaPaneLayout);
        tipoEnfermariaPaneLayout.setHorizontalGroup(
            tipoEnfermariaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 81, Short.MAX_VALUE)
        );
        tipoEnfermariaPaneLayout.setVerticalGroup(
            tipoEnfermariaPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 34, Short.MAX_VALUE)
        );

        jLabel1.setText(getTitle());

        jLabel6.setText("Nome:");
        jLabel6.setPreferredSize(new java.awt.Dimension(35, 15));

        labelEspecialidade.setText("Especialidade:");
        labelEspecialidade.setPreferredSize(new java.awt.Dimension(70, 15));

        jButton1.setText("Guardar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout filtrosLayout = new javax.swing.GroupLayout(filtros);
        filtros.setLayout(filtrosLayout);
        filtrosLayout.setHorizontalGroup(
            filtrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filtrosLayout.createSequentialGroup()
                .addGroup(filtrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(filtrosLayout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(filtrosLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(tipoEnfermariaPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(filtrosLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(filtrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelEspecialidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addGroup(filtrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoEspecialidadeProfissionalSaude, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campoNomeProfissionalSaude, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(123, 123, 123))
        );
        filtrosLayout.setVerticalGroup(
            filtrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filtrosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(4, 4, 4)
                .addGroup(filtrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoNomeProfissionalSaude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(filtrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoEspecialidadeProfissionalSaude, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEspecialidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(filtrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(filtrosLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tipoEnfermariaPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(filtrosLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jButton1)))
                .addGap(123, 123, 123))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(filtros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(filtros, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 87, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        adicionarOuEditar();
    }//GEN-LAST:event_jButton1MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField campoEspecialidadeProfissionalSaude;
    private javax.swing.JTextField campoNomeProfissionalSaude;
    private javax.swing.JPanel filtros;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel labelEspecialidade;
    private javax.swing.JPanel tipoEnfermariaPane;
    // End of variables declaration//GEN-END:variables

    private void adicionarOuEditar() {
        try {          
            
            String nome = campoNomeProfissionalSaude.getText();         
            profissionalSaude.setNome(nome);
            
            if(isMedico) {
                ((Medico)profissionalSaude).setEspecialidade(campoEspecialidadeProfissionalSaude.getText());
            }
            
            if(operacao.equals(ManagerProfissionalSaude.OPERACAO_ADICIONAR)){
                managerProfissionalSaude.adicionar(profissionalSaude);
            } else if(operacao.equals(ManagerProfissionalSaude.OPERACAO_EDITAR)){              
                managerProfissionalSaude.editar(profissionalSaude);
            }
            
            fechar();
        } catch (Exception ex) {
            mostrarAviso(ex.getMessage());
        }
        
    }
    
    /*
     * Métodos auxiliares genéricos
    */
    private void mostrarAviso(String aviso) {
        JOptionPane.showMessageDialog(rootPane, aviso);
    }
    
    private void fechar() {
        dispose();
        janela.atualizar();
    }
    /*
     * FIM Métodos auxiliares genéricos
    */
}

