package frontend.janelas;

import backend.Aplicacao;
import backend.Login;
import backend.Serializacao;
import backend.entidades.Utilizador;
import javax.swing.JOptionPane;

public class JanelaLogin extends javax.swing.JDialog {

    private final Aplicacao app;
    private final Serializacao serializacao;

    /**
     * login dos utilizadores
     * @param app
     * @param serializacao 
     */
     
    public JanelaLogin(Aplicacao app, Serializacao serializacao) {
        this.app = app;
        this.serializacao = serializacao;
        
        initComponents();
        
        //Indica que a janela deve ser modal ou seja,
        //bloqueia a execução do programa até que a janela seja fechada
        this.setModal(true);           
        
        //Não permite o redimensionamento da janela
        this.setResizable(false);
        
        //Mostra a centralização da janela
        this.setLocationRelativeTo(null);
        
        //O processo de fecho da janela será controlado pelo programa
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);                                
        
        // titulo da janela
        this.setTitle("Autenticação");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        campoNome = new javax.swing.JTextField();
        entrar = new javax.swing.JButton();
        campoPassword = new javax.swing.JPasswordField();
        utilizador = new javax.swing.JLabel();
        password = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0, 10, 0, 10, 0, 10, 0};
        layout.rowHeights = new int[] {0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0};
        getContentPane().setLayout(layout);

        campoNome.setToolTipText("Nome");
        campoNome.setAlignmentX(1.0F);
        campoNome.setAlignmentY(1.0F);
        campoNome.setMinimumSize(new java.awt.Dimension(150, 25));
        campoNome.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(campoNome, gridBagConstraints);

        entrar.setText("Entrar");
        entrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        entrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                entrarMouseClicked(evt);
            }
        });
        entrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entrarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(entrar, gridBagConstraints);

        campoPassword.setMinimumSize(new java.awt.Dimension(150, 25));
        campoPassword.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(campoPassword, gridBagConstraints);

        utilizador.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        utilizador.setText("Utilizador");
        utilizador.setMaximumSize(new java.awt.Dimension(500, 200));
        utilizador.setMinimumSize(new java.awt.Dimension(100, 25));
        utilizador.setPreferredSize(new java.awt.Dimension(100, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        getContentPane().add(utilizador, gridBagConstraints);

        password.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        password.setText("Password");
        password.setMaximumSize(new java.awt.Dimension(500, 200));
        password.setMinimumSize(new java.awt.Dimension(100, 25));
        password.setPreferredSize(new java.awt.Dimension(100, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        getContentPane().add(password, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void entrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_entrarMouseClicked
        autenticar();
    }//GEN-LAST:event_entrarMouseClicked

    private void entrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_entrarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField campoNome;
    private javax.swing.JPasswordField campoPassword;
    private javax.swing.JButton entrar;
    private javax.swing.JLabel password;
    private javax.swing.JLabel utilizador;
    // End of variables declaration//GEN-END:variables

    private void autenticar() {
        String user = campoNome.getText();
        String password = campoPassword.getText();
        //String password = String.valueOf(campoPassword.getPassword());
        Login login = new Login(app, user, password);
        
        // autentica o user
        try {
            Utilizador utilizador = login.validarLogin(user, password);
            
            // se nao foi lançada nenhuma exceçao, entao autentica o user
            if(utilizador != null) {
                app.setUtilizadorAutenticado(utilizador);
                fechar();
            }
        } catch (Exception ex) {
            mostrarAviso(ex.getMessage());
        }
    }
    
    /*
     * Métodos auxiliares genéricos
    */
    private void mostrarAviso(String aviso) {
        JOptionPane.showMessageDialog(rootPane, aviso);
    }
    
    private void fechar() {
        dispose();
    }
    /*
     * FIM Métodos auxiliares genéricos
    */
}

